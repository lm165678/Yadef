MaterialDef PointLight {
    MaterialParameters{
        Texture2D gbWorldPosLinearDepth;
        Texture2D gbWorldNormal;
        Texture2D gbAlbedo;
        Texture2D gbSpecular;
        Texture2D gbLight;
        Texture2D gbOutput;
        Texture2D gbDepth;

        Int maxLights;
        Int lightCount;
        Vector4Array spotLightPositionAngle;
        Vector4Array spotLightColorInnerAngle;
        Vector4Array spotLightDirectionRange;
    }
    Technique{
        VertexShader GLSL150:   Materials/yadef/DeferredLogic/SpotLight/SpotLights.vert
        FragmentShader GLSL150: Materials/yadef/DeferredLogic/SpotLight/SpotLightsLighting.frag

        WorldParameters {
            ViewProjectionMatrixInverse
            WorldViewProjectionMatrix
            Resolution
            NormalMatrix
        }

                Defines{
                    MAX_LIGHTS : maxLights
                }
    }
    Technique DebugSpotLights{
            VertexShader GLSL150:   Materials/yadef/DeferredLogic/SpotLight/SpotLights.vert
            FragmentShader GLSL150: Materials/yadef/DeferredLogic/SpotLight/SpotLightsDebug.frag

            WorldParameters {
                WorldViewProjectionMatrix
            }

                    Defines{
                        MAX_LIGHTS : maxLights
                    }
    }
}