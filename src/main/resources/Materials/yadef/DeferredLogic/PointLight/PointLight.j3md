MaterialDef PointLight {
    MaterialParameters{
        Texture2D gbWorldPosLinearDepth;
        Texture2D gbWorldNormal;
        Texture2D gbAlbedo;
        Texture2D gbSpecular;
        Texture2D gbLight;
        Texture2D gbOutput;

        Int lightCount;
        Vector4Array lightPositionRadius;
        Vector3Array lightColors;
    }
    Technique{
        VertexShader GLSL400:   Materials/yadef/DeferredLogic/PointLight/PointLights.vert
        FragmentShader GLSL400: Materials/yadef/DeferredLogic/PointLight/PointLightsLighting.frag

        WorldParameters {
            WorldViewProjectionMatrix
            Resolution
            NormalMatrix
        }
    }
    Technique DebugPointLights{
            VertexShader GLSL400:   Materials/yadef/DeferredLogic/PointLight/PointLights.vert
            FragmentShader GLSL400: Materials/yadef/DeferredLogic/PointLight/PointLightsDebug.frag

            WorldParameters {
                WorldViewProjectionMatrix
            }
    }
}