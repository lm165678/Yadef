MaterialDef PointLight {
    MaterialParameters{
        Texture2D gbWorldPosLinearDepth;
        Texture2D gbWorldNormal;
        Texture2D gbAlbedo;
        Texture2D gbSpecular;
        Texture2D gbLight;
        Texture2D gbOutput;
        Texture2D gbDepth;

        Int lightCount;
        Int maxLights;
        Vector4Array lightPositionRadius;
        Vector3Array lightColors;
    }
    Technique{
        VertexShader GLSL150:   Materials/yadef/DeferredLogic/PointLight/PointLights.vert
        FragmentShader GLSL150: Materials/yadef/DeferredLogic/PointLight/PointLightsLighting.frag

        WorldParameters {
            ViewProjectionMatrixInverse
            WorldViewProjectionMatrix
            Resolution
            NormalMatrix
        }

        Defines{
            MAX_LIGHTS : maxLights
        }
    }
    Technique DebugPointLights{
            VertexShader GLSL150:   Materials/yadef/DeferredLogic/PointLight/PointLights.vert
            FragmentShader GLSL150: Materials/yadef/DeferredLogic/PointLight/PointLightsDebug.frag

            WorldParameters {
                WorldViewProjectionMatrix
            }

                    Defines{
                        MAX_LIGHTS : maxLights
                    }
    }
}